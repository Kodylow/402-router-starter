let e=()=>{let e;return[new Promise(s=>{e=s}),e]},s=()=>{let[s,n]=e(),[r,a]=e(),t=[],i=[];return{signal:s,consume:s=>{switch(s.type){case"begin":if(s.unit&&0===t.length)for(let n=0;n<s.unit;n++){let[s,n]=e(),[r,a]=e();t.push(s),i.push([e=>{n({children:[],end:r,name:e.name??"",skip:!1,time:e.time})},e=>{a(e)}])}n({children:t,end:r,name:s.name??"",skip:!1,time:s.time});break;case"end":a(s.time)}},consumeChild(e){switch(e.type){case"begin":if(!i[0])return;let[s]=i[0];s({children:[],end:r,name:e.name??"",skip:!1,time:e.time});break;case"end":let n=i.shift();if(!n)return;n[1](e.time)}},resolve(){for(let[e,s]of(n({children:[],end:new Promise(e=>e(0)),name:"",skip:!0,time:0}),i))e({children:[],end:new Promise(e=>e(0)),name:"",skip:!0,time:0}),s(0);a(0)}}};export const createTraceListener=(e,n,r)=>async function(a){if("request"!==a.event||"begin"!==a.type)return;let t=a.id,i=e(),o=s(),l=s(),c=s(),m=s(),u=s(),d=s(),b=s(),k=s();o.consume(a);let f=e=>{if(e.id===t)switch(e.event){case"request":o.consume(e);break;case"request.unit":o.consumeChild(e);break;case"parse":l.consume(e);break;case"parse.unit":l.consumeChild(e);break;case"transform":c.consume(e);break;case"transform.unit":c.consumeChild(e);break;case"beforeHandle":m.consume(e);break;case"beforeHandle.unit":m.consumeChild(e);break;case"handle":u.consume(e);break;case"afterHandle":d.consume(e);break;case"afterHandle.unit":d.consumeChild(e);break;case"error":b.consume(e);break;case"error.unit":b.consumeChild(e);break;case"response":"begin"===e.type?(o.resolve(),l.resolve(),c.resolve(),m.resolve(),u.resolve(),d.resolve(),b.resolve()):i.off("event",f),k.consume(e);break;case"response.unit":k.consumeChild(e);break;case"exit":o.resolve(),l.resolve(),c.resolve(),m.resolve(),u.resolve(),d.resolve(),b.resolve()}};i.on("event",f),await r({id:t,context:a.ctx,set:a.ctx?.set,store:a.ctx?.store,time:a.time,request:o.signal,parse:l.signal,transform:c.signal,beforeHandle:m.signal,handle:u.signal,afterHandle:d.signal,error:b.signal,response:k.signal}),i.emit(`res${t}.${n}`,void 0)};